<xml xmlns="https://developers.google.com/blockly/xml"><variables></variables><block type="pxt-on-start" id="Zp7_0X9)9DFzeI~Csv$." x="20" y="20"><statement name="HANDLER"><block type="typescript_statement" id="5Oz(4Ee)4BaA]xbyo;zy"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="namespace Dog_Commands {" line1="    const debounceInterval = 500;" line2="    const moveDebounceInterval = 100;" line3="    let lastCommandTime = 0;" line4="" line5="    " line6="    /**" line7="     * Sends a command to the dog" line8="     */" line9="    //% blockId=Go2_Command" line10="    //% block=&quot;Tell Dog to %command&quot;" line11="    //% command.fieldEditor=&quot;gridpicker&quot;" line12="    //% command.fieldOptions.columns=4" line13="    //% command.fieldOptions.tooltips=&quot;false&quot;" line14="    //% command.fieldOptions.width=&quot;100&quot;" line15="    //% weight=100 " line16="    //% color=&quot;#ff6680&quot; " line17="    //% icon=&quot;\uf021&quot;" line18="    export function sendCommand(command: DogCommands) {" line19="        const currentTime = control.millis();" line20="        if (currentTime - lastCommandTime &gt; debounceInterval) {" line21="            switch (command) {" line22="                case DogCommands.Sit:" line23="                    radio.sendString(&quot;Sit \n&quot;);" line24="                    console.log(&quot;Command: Sit&quot;);" line25="                    break;" line26="                case DogCommands.RiseSit:" line27="                    radio.sendString(&quot;RiseSit \n&quot;);" line28="                    console.log(&quot;Command: RiseSit&quot;);" line29="                    break;" line30="                case DogCommands.StandUp:" line31="                    radio.sendString(&quot;StandUp \n&quot;);" line32="                    console.log(&quot;Command: StandUp&quot;);" line33="                    break;" line34="                case DogCommands.StandDown:" line35="                    radio.sendString(&quot;StandDown \n&quot;);" line36="                    console.log(&quot;Command: StandDown&quot;);" line37="                    break;" line38="                case DogCommands.Hello:" line39="                    radio.sendString(&quot;Hello \n&quot;);" line40="                    console.log(&quot;Command: Hello&quot;);" line41="                    break;" line42="                case DogCommands.Stretch:" line43="                    radio.sendString(&quot;Stretch \n&quot;);" line44="                    console.log(&quot;Command: Stretch&quot;);" line45="                    break;" line46="                case DogCommands.Wallow:" line47="                    radio.sendString(&quot;Wallow \n&quot;);" line48="                    console.log(&quot;Command: Wallow&quot;);" line49="                    break;" line50="                case DogCommands.Dance1:" line51="                    radio.sendString(&quot;Dance1 \n&quot;);" line52="                    console.log(&quot;Command: Dance 1&quot;);" line53="                    break;" line54="                case DogCommands.Dance2:" line55="                    radio.sendString(&quot;Dance2 \n&quot;);" line56="                    console.log(&quot;Command: Dance 2&quot;);" line57="                    break;" line58="                case DogCommands.FrontJump:" line59="                    radio.sendString(&quot;FrontJump \n&quot;);" line60="                    console.log(&quot;Command: Front Jump&quot;);" line61="                    break;" line62="                case DogCommands.FrontPounce:" line63="                    radio.sendString(&quot;FrontPounce \n&quot;);" line64="                    console.log(&quot;Command: Front Pounce&quot;);" line65="                    break;" line66="                default:" line67="                    console.log(&quot;Unknown command&quot;);" line68="            }" line69="        }" line70="    }" line71="" line72="    export enum DogCommands {" line73="        //% block=&quot;Sit&quot;" line74="        Sit," line75="        //% block=&quot;RiseSit&quot;" line76="        RiseSit," line77="        //% block=&quot;StandUp&quot;" line78="        StandUp," line79="        //% block=&quot;StandDown&quot;" line80="        StandDown," line81="        //% block=&quot;Hello&quot;" line82="        Hello," line83="        //% block=&quot;Stretch&quot;" line84="        Stretch," line85="        //% block=&quot;Wallow&quot;" line86="        Wallow," line87="        //% block=&quot;Dance 1&quot;" line88="        Dance1," line89="        //% block=&quot;Dance 2&quot;" line90="        Dance2," line91="        //% block=&quot;Front Jump&quot;" line92="        FrontJump," line93="        //% block=&quot;Front Pounce&quot;" line94="        FrontPounce" line95="" line96="    }" line97="" line98="" line99="    //% blockId=MoveGo2" line100="    //% block=&quot;Move Dog x:%x y:%y z:%z&quot;" line101="    //% x.min=-1 x.max=1 x.defl=0" line102="    //% y.min=-1 y.max=1 y.defl=0" line103="    //% z.min=-1 z.max=1 z.defl=0" line104="    //% weight=100 " line105="    //% color=&quot;#ff6680&quot; " line106="    //% icon=&quot;\uf021&quot;" line107="    export function moveDog(x: number, y: number, z: number) {" line108="        const currentTime2 = control.millis();" line109="        if (currentTime2 - lastCommandTime &gt; moveDebounceInterval) {" line110="            lastCommandTime = currentTime2;" line111="            let command = 'Move, ${ x }, ${ y }, ${ z }\n';" line112="            radio.sendString(command);" line113="            console.log('Move command sent: ${ command }');" line114="        } else {" line115="            console.log(&quot;Move command skipped due to debounce interval&quot;);" line116="        }" line117="    }" line118="" line119="    export enum ModeSwitch {" line120="        //% block=&quot;Normal Mode&quot;" line121="        Normal," line122="        //% block=&quot;AI Mode&quot;" line123="        AI," line124="    }" line125="" line126="    /**" line127="     * Mode Switcher" line128="     */" line129="    //% blockId=Mode_Switcher" line130="    //% block=&quot;Change Mode to %mode&quot;" line131="    //% weight=100 " line132="    //% color=&quot;#ff6680&quot; " line133="    //% icon=&quot;\uf021&quot;" line134="    export function modeSwitch(mode: ModeSwitch) {" line135="        const currentTime3 = control.millis();" line136="        if (currentTime3 - lastCommandTime &gt; debounceInterval) {" line137="            lastCommandTime = currentTime3;" line138="            switch (mode) {" line139="                case ModeSwitch.Normal:" line140="                    radio.sendString(&quot;normal\n&quot;);" line141="                    console.log(&quot;Mode: Changing to Normal mode&quot;);" line142="                    break;" line143="                case ModeSwitch.AI:" line144="                    radio.sendString(&quot;ai\n&quot;);" line145="                    console.log(&quot;Mode: Changing to AI Mode&quot;);" line146="                    break;" line147="                default:" line148="                    console.log(&quot;Unknown command&quot;);" line149="            }" line150="        }" line151="    }" line152="}" numlines="153"></mutation></block></statement></block></xml>